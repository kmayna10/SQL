#SQL Bike Lane Safety Ratings

#1. Selects the average safetyrating for each bike lane from the CTE

WITH safety_average_CTE AS (
SELECT street, AVG(safetyrating) AS rating
FROM CityBikeLanes
GROUP BY street 
)
SELECT street, rating
FROM safety_average_CTE
ORDER BY rating DESC

#2. Filters to only the bike lanes that have an average safety rating of 4.0 or higher

WITH safety_average_CTE AS (
SELECT street, AVG(safetyrating) AS rating
FROM CityBikeLanes
GROUP BY street 
)
SELECT street, rating
FROM safety_average_CTE
WHERE rating >=4.0
ORDER BY rating DESC

#3. Creates a label for these bike lanes that says "Safe Lane"

WITH safety_average_CTE AS (
SELECT street, AVG(safetyrating) AS rating
FROM CityBikeLanes
GROUP BY street 
)
SELECT street, rating,
"Safe Lane" AS TAG

FROM safety_average_CTE
WHERE rating >=4.0
ORDER BY rating DESC

##______________

#Create a list of all the bike lanes, both safety ratings for each lane, the average safety rating for each lane, and a label with the recommendation as "Remove", "Leave As-Is", or "Improvements Needed".
#* Bike lanes with an average safety rating of 4 or more should be labeled "Leave As-Is".
#* Bike lanes with an average safety rating of less than 2.5 should be labeled as "Remove".
#* All other bike lanes should be labeled as "Improvements Needed".

SELECT street, safetyrating,
AVG(safetyrating) OVER (PARTITION BY street) as "Average_safety_rating",
CASE WHEN AVG(safetyrating) OVER (PARTITION BY street) >=4 THEN "Leave As-Is"
    WHEN AVG(safetyrating) OVER (PARTITION BY street) <2.5 THEN "Remove"
    ELSE "Improvements Needed"
    END AS "Recommendation"
FROM CityBikeLanes


